name: 'ASM Script'
description: 'Run an assembly program'

inputs:
  data:
    description: 'Data section'
    required: false
  text:
    description: 'Text section'
    required: true
  template:
    description: 'The Assmebly template'
    required: false
    default: |
      section .data
        ASM_DATA

      section .text
        global _start
        _start:
        ASM_TEXT

        mov rax, 60
        xor rdi, rdi
        syscall

runs:
  using: 'composite'
  steps:
    - shell: bash
      run: |
        sudo apt-get install nasm -y

    - name: 'Create Project'
      shell: bash
      run: |
        ASM_PROJECT=$(mktemp -d)
        echo "ASM_PROJECT=$ASM_PROJECT" >> $GITHUB_ENV
        cd "$ASM_PROJECT"

    - name: 'Generate Script'
      shell: bash
      working-directory: ${{ env.ASM_PROJECT }}
      run: |
        set -e

        template=$(cat <<EOF
        ${{ inputs.template }}
        EOF
        )

        safe_data=$(printf '%s\n' "${{ inputs.data }}" | sed 's/[&/\]/\\&/g')
        safe_text=$(printf '%s\n' "${{ inputs.text }}" | sed 's/[&/\]/\\&/g')

        # Use double quotes around 's///' to allow variable expansion
        template=$(echo "$template" | sed "s/ASM_DATA/$safe_data/g")
        template=$(echo "$template" | sed "s/ASM_TEXT/$safe_text/g")

        echo "$template" > source.s
        cat source.s

    - name: 'Run Script'
      shell: bash
      working-directory: ${{ env.ASM_PROJECT }}
      run: |
        nasm -f elf64 source.s -o out.o
        ld out.o -o out
        ./out

